import java.util.Scanner;

class Node{
    int data;
    Node link;
    
    Node(int data){
        this.data = data;
        this.link=link;
    }
}

class Main{
    private Node head;
    
    public void addFirst(int data){
        Node newNode = new Node(data);
        newNode.link = head;
        head = newNode;
    }
    
    public void addLast(int data){
        Node newNode = new Node(data);
        if(head==null){
            newNode = head;
            return;
        }
        
        Node current = head;
        while(current.link!=null){
            current=current.link;
        }
        current.link= newNode;
    }
    
    public void addPos(int data, int pos){
        Node newNode = new Node(data);
        if(pos<=1){
            addFirst(data);
            return;
        }
        
        Node current = head;
        for(int i = 1; i<pos-1 ; i++){
         current = current.link;
        }
         newNode.link= current.link;
        current.link=newNode;
        
    }
    
    public void deleteFirst(){
        if (head == null) {
            System.out.println("List is empty.");
            return;
        }
        head = head.link;
    }
    
    public void deleteLast(){
        Node current = head;
        if (head == null) {
            System.out.println("List is empty.");
            return;
        }
        while (current.link.link != null) {
            current = current.link;
        }
        current.link = null;
    }
    
    public void deletePos(int pos){
        if (pos <= 1) {
            deleteFirst();
            return;
        }
        Node current = head;
        for (int i = 1; i < pos - 1; i++) {
            current = current.link;
    }
    current.link = current.link.link;
}

 public void display() {
        if (head == null) {
            System.out.println("List is empty.");
            return;
        }
        Node current = head;
        while (current != null) {
            System.out.print(current.data + " -> ");
            current = current.link;
        }
        System.out.println("null");
    }
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Main list = new Main();

        while (true) {
            System.out.println("\n1. Add First\n2. Add Last\n3. Add Between\n4. Delete First\n5. Delete Last\n6. Delete Between\n7. Display\n8. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter value: ");
                    list.addFirst(scanner.nextInt());
                    break;
                case 2:
                    System.out.print("Enter value: ");
                    list.addLast(scanner.nextInt());
                    break;
                case 3:
                    System.out.print("Enter value: ");
                    int value = scanner.nextInt();
                    System.out.print("Enter position: ");
                    list.addPos(value, scanner.nextInt());
                    break;
                case 4:
                    list.deleteFirst();
                    break;
                case 5:
                    list.deleteLast();
                    break;
                case 6:
                    System.out.print("Enter position: ");
                    list.deletePos(scanner.nextInt());
                    break;
                case 7:
                    list.display();
                    break;
                case 8:
                    System.out.println("Exiting...");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid choice!");
            }
        }
    }
}
